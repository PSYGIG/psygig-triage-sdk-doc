Diagnostic Testing
==================
Ensuring the reliability and stability of a safety-critical system is a necessity when considering the socio-economical costs of a system failure.
The consequences of a failure can be benign such as an intermittent disk failure causing few corrupted entries in a log file, or it can be catastrophic
such as a memory failure causing the navigation system of an autonomous vehicle to halt. Including diagnostic tests as part of the normal operation of the device
allows chronic or intermittent problems to be discovered before a more catastrophic failure can occur.

`PSYGIG Mobility IoT SDK` provides an extensive suite of diagnostic tests designed to exercise and stress the most common subsytems of an embedded device.

The Diagnostic Testing API includes many features suitable for integration into embedded systems:

- Works out-of-the-box; `just run` :ref:`psydiag <running-diagnostics>`
- Full diagnostic test suite:

.. |cpu| image:: images/cpu.png
   :height: 30

.. |gpu| image:: images/gpu.png
   :height: 30

.. |ram| image:: images/ram.png
   :height: 30

.. |disk| image:: images/disk.png
   :height: 30

.. |network| image:: images/network.png
   :height: 30

.. table::
    :widths: 10 40
        
    +-------------+----------------------------------+
    | |cpu|       | CPU                              |
    +-------------+----------------------------------+
    | |gpu|       | GPU                              |
    +-------------+----------------------------------+
    | |ram|       | RAM                              |
    +-------------+----------------------------------+
    | |disk|      | Storage devices                  |
    +-------------+----------------------------------+
    | |network|   | Network                          |
    +-------------+----------------------------------+

- Simultaneous testing of all subsystems to fully stress the device as a whole
- Customizable and extensible diagnostic tests
- Track diagnostic results with built-in integration in the `PSYGIG data platform <https://www.psygig.com>`_
- Generate a diagnostics HTML report

.. note::
    The `Diagnostic Testing` feature is a work-in-progress. 
    Please `contact us <mailto:info@psygig.com>`_ if you are interested in beta-testing this feature. 

.. _running-diagnostics:

Running the diagnostics tests
-----------------------------
Simply run the included standalone binary ``psydiag`` to run the full diagnostic suite. For example:

.. code-block:: bash

    psydiag -f json -o diagnostic-results.json

See :doc:`psydiag-man` for a complete list of options.

Using C/C++ SDK API
---------------------------
The Diagnostic Testing API can be accessed by including a :doc:`single header file <api/file_include_psyiage_psyiagesdk.h>`
and linking the ``libpsyiage`` shared library. See :ref:`libpsyiage-linking` for details.

Running the RAM Diagnostic Test
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: c
    :linenos:

    #include <psyiage/psyiagesdk.h>

    int main(int argc, char **argv)
    {
        psyiage_handle     pah;  // handle to psyiage instance

        /* ... Initialize code omitted for simplicity ... */

        // Run RAM diagnostic test
        psyiage_diag_result diagres;
        rc = psyiage_diag_run(pah, PSYIAGE_DIAG_RAM, &diagres);

        /* ... Cleanup code omitted for simplicity ... */
    }

Sample diagnostic JSON results
------------------------------

.. code-block:: c

    {
        "DiagResults": {
            "Type: "RAM"
            "StartTime": 1547534065,
            "StartTimeOfDay": "2019-01-15 15:34:25",
            "Result": "PASS"
        }
    }
